/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 *//**
 * EQchains core - EQchains Foundation's EQchains core library
 * @copyright 2018-present EQchains Foundation All rights reserved...
 * Copyright of all works released by EQchains Foundation or jointly released by
 * EQchains Foundation with cooperative partners are owned by EQchains Foundation
 * and entitled to protection available from copyright law by country as well as
 * international conventions.
 * Attribution — You must give appropriate credit, provide a link to the license.
 * Non Commercial — You may not use the material for commercial purposes.
 * No Derivatives — If you remix, transform, or build upon the material, you may
 * not distribute the modified material.
 * For any use of above stated content of copyright beyond the scope of fair use
 * or without prior written permission, EQchains Foundation reserves all rights to
 * take any legal action and pursue any right or remedy available under applicable
 * law.
 * https://www.eqchains.com
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.eqzip.eqcoin.rpc.avro;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public interface MinerNetwork {
  public static final org.apache.avro.Protocol PROTOCOL = org.apache.avro.Protocol.parse("{\"protocol\":\"MinerNetwork\",\"namespace\":\"com.eqzip.eqcoin.rpc.avro\",\"types\":[{\"type\":\"record\",\"name\":\"Cookie\",\"fields\":[{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"Status\",\"fields\":[{\"name\":\"cookie\",\"type\":\"Cookie\"},{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"MinerList\",\"fields\":[{\"name\":\"cookie\",\"type\":\"Cookie\"},{\"name\":\"minerList\",\"type\":\"bytes\"}]},{\"type\":\"record\",\"name\":\"FullNodeList\",\"fields\":[{\"name\":\"cookie\",\"type\":\"Cookie\"},{\"name\":\"fullNodeList\",\"type\":\"bytes\"}]},{\"type\":\"record\",\"name\":\"Block\",\"fields\":[{\"name\":\"cookie\",\"type\":\"Cookie\"},{\"name\":\"block\",\"type\":\"bytes\"}]},{\"type\":\"record\",\"name\":\"MineringBase\",\"fields\":[{\"name\":\"cookie\",\"type\":\"Cookie\"},{\"name\":\"baseIp\",\"type\":\"string\"},{\"name\":\"baseHeight\",\"type\":\"long\"},{\"name\":\"baseHash\",\"type\":{\"type\":\"fixed\",\"name\":\"BaseHash\",\"size\":16}},{\"name\":\"currentTimestamp\",\"type\":\"long\"}]},{\"type\":\"record\",\"name\":\"TransactionHashList\",\"fields\":[{\"name\":\"cookie\",\"type\":\"Cookie\"},{\"name\":\"transactionHashList\",\"type\":\"bytes\"}]},{\"type\":\"record\",\"name\":\"TransactionList\",\"fields\":[{\"name\":\"cookie\",\"type\":\"Cookie\"},{\"name\":\"transactionList\",\"type\":\"bytes\"}]}],\"messages\":{\"ping\":{\"request\":[{\"name\":\"cookie\",\"type\":\"Cookie\"}],\"response\":\"Status\"},\"getMinerList\":{\"request\":[{\"name\":\"cookie\",\"type\":\"Cookie\"}],\"response\":\"MinerList\"},\"getFullNodeList\":{\"request\":[{\"name\":\"cookie\",\"type\":\"Cookie\"}],\"response\":\"FullNodeList\"},\"sendNewBlock\":{\"request\":[{\"name\":\"newBlock\",\"type\":\"Block\"}],\"response\":\"Status\"},\"sendMineringBase\":{\"request\":[{\"name\":\"mineringBase\",\"type\":\"MineringBase\"}],\"response\":\"Status\"},\"getMineringBase\":{\"request\":[{\"name\":\"cookie\",\"type\":\"Cookie\"}],\"response\":\"MineringBase\"},\"getTransactionHashList\":{\"request\":[{\"name\":\"cookie\",\"type\":\"Cookie\"}],\"response\":\"TransactionHashList\"},\"getTransactionList\":{\"request\":[{\"name\":\"transactionHashList\",\"type\":\"TransactionHashList\"}],\"response\":\"TransactionList\"}}}");
  /**
   */
  com.eqzip.eqcoin.rpc.avro.Status ping(com.eqzip.eqcoin.rpc.avro.Cookie cookie) throws org.apache.avro.AvroRemoteException;
  /**
   */
  com.eqzip.eqcoin.rpc.avro.MinerList getMinerList(com.eqzip.eqcoin.rpc.avro.Cookie cookie) throws org.apache.avro.AvroRemoteException;
  /**
   */
  com.eqzip.eqcoin.rpc.avro.FullNodeList getFullNodeList(com.eqzip.eqcoin.rpc.avro.Cookie cookie) throws org.apache.avro.AvroRemoteException;
  /**
   */
  com.eqzip.eqcoin.rpc.avro.Status sendNewBlock(com.eqzip.eqcoin.rpc.avro.Block newBlock) throws org.apache.avro.AvroRemoteException;
  /**
   */
  com.eqzip.eqcoin.rpc.avro.Status sendMineringBase(com.eqzip.eqcoin.rpc.avro.MineringBase mineringBase) throws org.apache.avro.AvroRemoteException;
  /**
   */
  com.eqzip.eqcoin.rpc.avro.MineringBase getMineringBase(com.eqzip.eqcoin.rpc.avro.Cookie cookie) throws org.apache.avro.AvroRemoteException;
  /**
   */
  com.eqzip.eqcoin.rpc.avro.TransactionHashList getTransactionHashList(com.eqzip.eqcoin.rpc.avro.Cookie cookie) throws org.apache.avro.AvroRemoteException;
  /**
   */
  com.eqzip.eqcoin.rpc.avro.TransactionList getTransactionList(com.eqzip.eqcoin.rpc.avro.TransactionHashList transactionHashList) throws org.apache.avro.AvroRemoteException;

  @SuppressWarnings("all")
  public interface Callback extends MinerNetwork {
    public static final org.apache.avro.Protocol PROTOCOL = com.eqzip.eqcoin.rpc.avro.MinerNetwork.PROTOCOL;
    /**
     * @throws java.io.IOException The async call could not be completed.
     */
    void ping(com.eqzip.eqcoin.rpc.avro.Cookie cookie, org.apache.avro.ipc.Callback<com.eqzip.eqcoin.rpc.avro.Status> callback) throws java.io.IOException;
    /**
     * @throws java.io.IOException The async call could not be completed.
     */
    void getMinerList(com.eqzip.eqcoin.rpc.avro.Cookie cookie, org.apache.avro.ipc.Callback<com.eqzip.eqcoin.rpc.avro.MinerList> callback) throws java.io.IOException;
    /**
     * @throws java.io.IOException The async call could not be completed.
     */
    void getFullNodeList(com.eqzip.eqcoin.rpc.avro.Cookie cookie, org.apache.avro.ipc.Callback<com.eqzip.eqcoin.rpc.avro.FullNodeList> callback) throws java.io.IOException;
    /**
     * @throws java.io.IOException The async call could not be completed.
     */
    void sendNewBlock(com.eqzip.eqcoin.rpc.avro.Block newBlock, org.apache.avro.ipc.Callback<com.eqzip.eqcoin.rpc.avro.Status> callback) throws java.io.IOException;
    /**
     * @throws java.io.IOException The async call could not be completed.
     */
    void sendMineringBase(com.eqzip.eqcoin.rpc.avro.MineringBase mineringBase, org.apache.avro.ipc.Callback<com.eqzip.eqcoin.rpc.avro.Status> callback) throws java.io.IOException;
    /**
     * @throws java.io.IOException The async call could not be completed.
     */
    void getMineringBase(com.eqzip.eqcoin.rpc.avro.Cookie cookie, org.apache.avro.ipc.Callback<com.eqzip.eqcoin.rpc.avro.MineringBase> callback) throws java.io.IOException;
    /**
     * @throws java.io.IOException The async call could not be completed.
     */
    void getTransactionHashList(com.eqzip.eqcoin.rpc.avro.Cookie cookie, org.apache.avro.ipc.Callback<com.eqzip.eqcoin.rpc.avro.TransactionHashList> callback) throws java.io.IOException;
    /**
     * @throws java.io.IOException The async call could not be completed.
     */
    void getTransactionList(com.eqzip.eqcoin.rpc.avro.TransactionHashList transactionHashList, org.apache.avro.ipc.Callback<com.eqzip.eqcoin.rpc.avro.TransactionList> callback) throws java.io.IOException;
  }
}